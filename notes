Possible optimizations :
	Find chunks whose points are always in the set, and mark them
	Maybe do the same for individual iterations ?
	bit tricks like replacing % 2 with & 0x1
	Randomly attempt to calculate all values for a chunk, in an attempt to detect damage
		I noticed there's some very slight damage on the colored part on a few julia sets
		and this could help repair the burning ship too
Possible upgrades:
	When zooming, only display camera's buffer once things settle down a little
		possibly make this togglable via a function key
	When zooming, display a streched version of the previous buffer while we calculate stuff
		could work really well if combined with previous point
	Add some post processing effect ?
		color_bounds could then be done in post processing for example
	Menu that shows values and what the keys do
	Implement proper power function for complex numbers and use it on the mandelbrot set
		Can even use non integer values to get a super cool animation
			Probably disable zoom ? and don't blit the camera until enough iterations have been calculated
	Have julia constantly update based on Pointer position ?
		Or have the right click toggle animation Mode ?
			same comments as for mandelbrot animations
	Show a dot for where the current julia c is
		shift + mov keys to move julia c by step.real/imag ?
		togglable ?
Cleanup:
	Put some of the very blocky code (mostly in draw.c) into separate functions for lisibility
